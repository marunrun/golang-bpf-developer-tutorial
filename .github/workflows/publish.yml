name: Build and publish

on:
  push:
    branches: "master"

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu ]

    steps:
    - uses: actions/checkout@v3

    - name: Set latest release version
      if:   github.event_name == 'push' && github.ref == 'refs/heads/master'
      id: set_version
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const { data: tags } = await github.rest.repos.listTags({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          if (releases.length === 0) { return "v0.0.1"; }
         
          function increase_v(version) {
            const parts = version.split(".");
            const last = parseInt(parts[2]) + 1;
            const next_version = `${parts[0]}.${parts[1]}.${last.toString()}`;
            return next_version;
          }
          
          const latest_release_tag = releases[0].tag_name;
          
          const tag = tags.find(tag => tag.commit.sha === context.sha);
          
          return tag ? tag.name : increase_v(latest_release_tag)

    - name: install deps
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
        wget git golang clang llvm curl pkg-config build-essential zlib1g-dev \
        gcc-multilib libc6-dev linux-libc-dev linux-headers-generic

    - name: setup symlinks for cross-compilation
      run: |
        sudo ln -sf /usr/include/x86_64-linux-gnu/asm /usr/include/asm
        sudo ln -sf /usr/include/x86_64-linux-gnu/gnu /usr/include/gnu
        sudo ln -sf /usr/include/x86_64-linux-gnu/bits /usr/include/bits
        sudo ln -sf /usr/include/x86_64-linux-gnu/sys /usr/include/sys

    - name: setup build environment
      run: |
        echo "BPF_CLANG=clang" >> $GITHUB_ENV
        echo "BPF_CFLAGS=-O2 -g -Wall -Werror -target x86_64" >> $GITHUB_ENV


    - name: build package
      run:  make build

